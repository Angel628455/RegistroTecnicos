@page "/Ciudad/Index"
@using Microsoft.AspNetCore.Components.Forms
@using RegistroTecnico.Models
@using RegistroTecnico.Services
@inject CiudadesServices ciudadService
@inject NavigationManager navigationManager

<PageTitle>Index</PageTitle>

<div class="container">
    <div class="shadow-lg">
        <style>
            .titulo-fondo-azul-borde-negro {
                background-color: #add8e6;
                border: 2px solid black;
                border-radius: 5px;
                display: flex;
                align-items: center;
                justify-content: center;
            }

                .titulo-fondo-azul-borde-negro img {
                    margin-right: 10px;
                    width: 40px;
                    height: 40px;
                }

            .btn img {
                width: 24px;
                height: 24px;
            }
        </style>

        <div class="card-header text-center titulo-fondo-azul-borde-negro">
            <h3><strong>Listado de Ciudades</strong></h3>
        </div>

        <div class="card-body">
            <div class="row">
                <div class="col-3">
                    <label class="col-form-label"><strong>Filtrar por</strong></label>
                </div>

                <div class="col-4">
                    <label class="col-form-label"><strong>B&uacute;squeda</strong></label>
                </div>
            </div>

            <div class="row align-items-center">
                <div class="col-3">
                    <InputSelect class="form-select" @bind-Value="Filtro">
                        <option value="" selected disabled>Elija una opci&oacute;n</option>
                        <option value="Id">Id</option>
                        <option value="Nombre">Nombre</option>
                    </InputSelect>
                </div>

                <div class="col-4">
                    <div class="input-group">
                        <input class="form-control" @bind="ValorFiltro" placeholder="Buscar" />
                        <button type="button" class="btn btn-outline-primary" @onclick="Buscar">Buscar</button>
                    </div>
                </div>
            </div>
            <div class="col-3">
                <button type="button" class="btn btn-primary" @onclick="PantallaCrear"> Crear</button>
            </div>

            <table class="table table-bordered text-center mt-4">
                <thead>
                    <tr>
                        <th>ID de Ciudad</th>
                        <th>Nombre</th>
                        <th>Editar</th>
                        <th>Eliminar</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var ciudad in ListaCiudades)
                    {
                        <tr>
                            <td>@ciudad.CiudadId</td>
                            <td>@ciudad.Nombre</td>

                            <td>
                                <button type="button" class="btn btn-outline-warning" @onclick="() => PantallaEditar(ciudad.CiudadId)">Modificar</button>
                            </td>

                            <td>
                                <button type="button" class="btn btn-outline-danger" @onclick="() => PantallaEliminar(ciudad.CiudadId)">Eliminar</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="card-footer">
            <p><strong>Total de Ciudades: </strong>@ListaCiudades.Count</p>
        </div>
    </div>
</div>

@code {
    public List<Ciudades> ListaCiudades { get; set; } = new List<Ciudades>();

    public string Filtro { get; set; } = string.Empty;
    public string ValorFiltro { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        ListaCiudades = await ciudadService.Listar(e => e.CiudadId > 0);
    }

    public void PantallaCrear() => navigationManager.NavigateTo("/Ciudad/Create");

    public void PantallaEditar(int id)
    {
        navigationManager.NavigateTo($"/Ciudad/Edit/{id}");
    }

    public void PantallaEliminar(int id)
    {
        navigationManager.NavigateTo($"/Ciudad/Delete/{id}");
    }

    private async Task Buscar()
    {
        if (ValorFiltro.Trim() != "")
        {
            if (Filtro == "Id" && int.TryParse(ValorFiltro, out int ciudadId))
                ListaCiudades = await ciudadService.Listar(e => e.CiudadId == ciudadId);
            else if (Filtro == "Nombre")
                ListaCiudades = await ciudadService.Listar(e => e.Nombre.ToLower().Contains(ValorFiltro.ToLower()));
        }
        else
        {
            ListaCiudades = await ciudadService.Listar(e => e.CiudadId > 0);
        }
    }

    private async Task Restablecer()
    {
        ListaCiudades = await ciudadService.Listar(e => e.CiudadId > 0);
        Filtro = string.Empty;
        ValorFiltro = string.Empty;
    }
}
